{"version":3,"sources":["assets\\Script\\spine\\SkelChanger.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass(\"SkelChanger\")\r\nexport default class SkelChanger extends cc.Component {\r\n\tstart() {\r\n\t\t// @ts-ignore\r\n\t\tlet skeleton = sp.Skeleton.prototype;\r\n\t\tif (CC_JSB) {\r\n\t\t\t// 局部换装\r\n\t\t\t// @ts-ignore\r\n\t\t\tskeleton.updateRegion = function (attach: sp.spine.RegionAttachment | sp.spine.MeshAttachment, tex2d: cc.Texture2D) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tlet jsbTex2d = new middleware.Texture2D();\r\n\t\t\t\tjsbTex2d.setNativeTexture(tex2d.getImpl());\r\n\t\t\t\tjsbTex2d.setPixelsWide(tex2d.width);\r\n\t\t\t\tjsbTex2d.setPixelsHigh(tex2d.height);\r\n\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tsp.spine.updateRegion(attach, jsbTex2d);\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\t// 局部换装\r\n\t\t\t// @ts-ignore\r\n\t\t\tskeleton.updateRegion = function (attach: sp.spine.RegionAttachment | sp.spine.MeshAttachment, tex2d: cc.Texture2D) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst skeTexture = new sp.SkeletonTexture({ width: tex2d.width, height: tex2d.height } as ImageBitmap);\r\n\t\t\t\tskeTexture.setRealTexture(tex2d);\r\n\r\n\t\t\t\tconst region: sp.spine.TextureAtlasRegion = attach.region as sp.spine.TextureAtlasRegion;\r\n\t\t\t\tregion.width = tex2d.width;\r\n\t\t\t\tregion.height = tex2d.height;\r\n\t\t\t\tregion.originalWidth = tex2d.width;\r\n\t\t\t\tregion.originalHeight = tex2d.height;\r\n\t\t\t\tregion.rotate = false;\r\n\t\t\t\tregion.u = 0;\r\n\t\t\t\tregion.v = 0;\r\n\t\t\t\tregion.u2 = 1;\r\n\t\t\t\tregion.v2 = 1;\r\n\t\t\t\tregion.texture = skeTexture;\r\n\t\t\t\tregion.renderObject = region;\r\n\r\n\t\t\t\tattach.region = region;\r\n\t\t\t\tattach.width = tex2d.width;\r\n\t\t\t\tattach.height = tex2d.height;\r\n\r\n\t\t\t\tif (attach instanceof sp.spine.MeshAttachment) {\r\n\t\t\t\t\tattach.updateUVs();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tattach.setRegion(region);\r\n\t\t\t\t\tattach.updateOffset();\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\tprivate async deepCopy(skel: sp.Skeleton) {\r\n\t\t// 记录当前播放的动画\r\n\t\tconst animation = skel.animation;\r\n\t\tconst skelData = skel.skeletonData;\r\n\t\tconst flag = \"_copy\";\r\n\t\t// @ts-ignore\r\n\t\tif (skelData._uuid !== undefined && skelData._uuid.indexOf(flag) !== -1) {\r\n\t\t\tcc.log(\"说明已经拷贝过了\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet copy: sp.SkeletonData = new sp.SkeletonData();\r\n\t\tcc.js.mixin(copy, skelData);\r\n\t\tconst oldName: string = copy.name;\r\n\t\tconst newName: string = copy.name + flag;\r\n\r\n\t\tconst date = new Date();\r\n\t\t// @ts-ignore\r\n\t\tcopy._uuid = skelData._uuid + \"_\" + date.getTime() + flag;\r\n\t\tcopy.name = newName;\r\n\t\tcopy.atlasText = copy.atlasText.replace(oldName, newName);\r\n\t\t// @ts-ignore\r\n\t\tcopy.textureNames[0] = newName + \".png\";\r\n\t\t// @ts-ignore\r\n\t\tcopy.init && copy.init();\r\n\r\n\t\tskel.skeletonData = copy;\r\n\t\t// 继续播放的动画，不然会停止\r\n\t\tskel.setAnimation(0, animation, true);\r\n\t}\r\n\r\n\tprotected async updateAttach(skel: sp.Skeleton, slotName: string, texture2d: cc.Texture2D) {\r\n\t\tthis.deepCopy(skel);\r\n\r\n\t\tconst slot: sp.spine.Slot = skel!.findSlot(slotName);\r\n\t\tif (!slot) {\r\n\t\t\tcc.error(\"findSlot is null\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst attach: sp.spine.RegionAttachment | sp.spine.MeshAttachment = slot.getAttachment() as\r\n\t\t\t| sp.spine.RegionAttachment\r\n\t\t\t| sp.spine.MeshAttachment;\r\n\t\tif (attach === null) {\r\n\t\t\tcc.error(\"getAttachment is null\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// @ts-ignore\r\n\t\tskel.updateRegion(attach, texture2d);\r\n\t\tskel.invalidAnimationCache();\r\n\t}\r\n}\r\n"]}